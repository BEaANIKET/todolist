// Get references to DOM elements
const tasksContainer = document.getElementById('tasks-container');
const addTaskForm = document.getElementById('add-task-form');
const newTaskInput = document.getElementById('new-task');

// Define a task structure
const Task = function(id, text, completed) {
  this.id = id;
  this.text = text;
  this.completed = completed;
};

// Function to generate a unique ID
function generateUniqueId() {
  return Math.random().toString(36).substring(2, 15);
}

// Function to load tasks from local storage
function loadTasks() {
  const tasks = localStorage.getItem('tasks');
  if (tasks) {
    const parsedTasks = JSON.parse(tasks);
    parsedTasks.forEach(task => addTaskToList(task));
  }
}

// Function to add a task to the list
function addTaskToList(task) {
  const taskItem = document.createElement('li');
  taskItem.innerHTML = `
    <input type="checkbox" id="${task.id}" ${task.completed ? 'checked' : ''}>
    <label for="${task.id}">${task.text}</label>
    <button data-id="${task.id}">Delete</button>
  `;
  tasksContainer.appendChild(taskItem);
  
  // Add event listeners for checkbox and delete button
  taskItem.querySelector('input').addEventListener('change', handleTaskCompletion);
  taskItem.querySelector('button').addEventListener('click', handleTaskDeletion);
}

// Function to handle task completion
function handleTaskCompletion(event) {
  const taskId = event.target.id;
  const tasks = JSON.parse(localStorage.getItem('tasks'));
  const updatedTasks = tasks.map(task => {
    if (task.id === taskId) {
      return { ...task, completed: !task.completed };
    }
    return task;
  });
  localStorage.setItem('tasks', JSON.stringify(updatedTasks));
}

// Function to handle task deletion
function handleTaskDeletion(event) {
  const taskId = event.target.dataset.id;
  const tasks = JSON.parse(localStorage.getItem('tasks'));
  const updatedTasks = tasks.filter(task => task.id !== taskId);
  localStorage.setItem('tasks', JSON.stringify(updatedTasks));
  tasksContainer.removeChild(event.target.parentElement);
}

// Add event listener to the form submission
addTaskForm.addEventListener('submit', function(event) {
  event.preventDefault();
  const newTaskText = newTaskInput.value.trim();
  if (newTaskText) {
    const newTask = new Task(generateUniqueId(), newTaskText, false);
    const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
    tasks.push(newTask);
    localStorage.setItem('tasks', JSON.stringify(tasks));
    addTaskToList(newTask);
    newTaskInput.value = ''; // Clear the input field
  }
});

// Call loadTasks to display existing tasks on page load
loadTasks();
